// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service_client.proto

/*
Package handler is a generated protocol buffer package.

It is generated from these files:
	service_client.proto

It has these top-level messages:
	Log
	User
	SCPayload
*/
package handler

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PayloadType int32

const (
	PayloadType_USER_CREATE   PayloadType = 0
	PayloadType_USER_UPDATE   PayloadType = 1
	PayloadType_CODE_GENERATE PayloadType = 2
	PayloadType_CODE_VERIFY   PayloadType = 3
)

var PayloadType_name = map[int32]string{
	0: "USER_CREATE",
	1: "USER_UPDATE",
	2: "CODE_GENERATE",
	3: "CODE_VERIFY",
}
var PayloadType_value = map[string]int32{
	"USER_CREATE":   0,
	"USER_UPDATE":   1,
	"CODE_GENERATE": 2,
	"CODE_VERIFY":   3,
}

func (x PayloadType) String() string {
	return proto.EnumName(PayloadType_name, int32(x))
}
func (PayloadType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Log struct {
	Event      string  `protobuf:"bytes,1,opt,name=Event" json:"Event,omitempty"`
	Status     string  `protobuf:"bytes,2,opt,name=Status" json:"Status,omitempty"`
	Code       uint32  `protobuf:"varint,3,opt,name=Code" json:"Code,omitempty"`
	ExpiredAt  float64 `protobuf:"fixed64,4,opt,name=ExpiredAt" json:"ExpiredAt,omitempty"`
	Embeded    bool    `protobuf:"varint,5,opt,name=Embeded" json:"Embeded,omitempty"`
	ActionTime float64 `protobuf:"fixed64,6,opt,name=ActionTime" json:"ActionTime,omitempty"`
	Method     string  `protobuf:"bytes,7,opt,name=Method" json:"Method,omitempty"`
	Cert       string  `protobuf:"bytes,8,opt,name=Cert" json:"Cert,omitempty"`
}

func (m *Log) Reset()                    { *m = Log{} }
func (m *Log) String() string            { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()               {}
func (*Log) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Log) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *Log) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Log) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Log) GetExpiredAt() float64 {
	if m != nil {
		return m.ExpiredAt
	}
	return 0
}

func (m *Log) GetEmbeded() bool {
	if m != nil {
		return m.Embeded
	}
	return false
}

func (m *Log) GetActionTime() float64 {
	if m != nil {
		return m.ActionTime
	}
	return 0
}

func (m *Log) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Log) GetCert() string {
	if m != nil {
		return m.Cert
	}
	return ""
}

type User struct {
	PhoneNumber    string          `protobuf:"bytes,1,opt,name=PhoneNumber" json:"PhoneNumber,omitempty"`
	Uin            uint32          `protobuf:"varint,2,opt,name=Uin" json:"Uin,omitempty"`
	Name           string          `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
	IsVerified     bool            `protobuf:"varint,4,opt,name=IsVerified" json:"IsVerified,omitempty"`
	Email          string          `protobuf:"bytes,5,opt,name=Email" json:"Email,omitempty"`
	Sex            string          `protobuf:"bytes,6,opt,name=Sex" json:"Sex,omitempty"`
	Birthdate      float64         `protobuf:"fixed64,7,opt,name=Birthdate" json:"Birthdate,omitempty"`
	AdditionalData string          `protobuf:"bytes,8,opt,name=AdditionalData" json:"AdditionalData,omitempty"`
	Logs           map[string]*Log `protobuf:"bytes,9,rep,name=Logs" json:"Logs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetUin() uint32 {
	if m != nil {
		return m.Uin
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *User) GetBirthdate() float64 {
	if m != nil {
		return m.Birthdate
	}
	return 0
}

func (m *User) GetAdditionalData() string {
	if m != nil {
		return m.AdditionalData
	}
	return ""
}

func (m *User) GetLogs() map[string]*Log {
	if m != nil {
		return m.Logs
	}
	return nil
}

type SCPayload struct {
	Action      PayloadType `protobuf:"varint,1,opt,name=Action,enum=PayloadType" json:"Action,omitempty"`
	PhoneNumber string      `protobuf:"bytes,2,opt,name=PhoneNumber" json:"PhoneNumber,omitempty"`
	PayloadUser *User       `protobuf:"bytes,3,opt,name=PayloadUser" json:"PayloadUser,omitempty"`
	PayloadLog  *Log        `protobuf:"bytes,4,opt,name=PayloadLog" json:"PayloadLog,omitempty"`
}

func (m *SCPayload) Reset()                    { *m = SCPayload{} }
func (m *SCPayload) String() string            { return proto.CompactTextString(m) }
func (*SCPayload) ProtoMessage()               {}
func (*SCPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SCPayload) GetAction() PayloadType {
	if m != nil {
		return m.Action
	}
	return PayloadType_USER_CREATE
}

func (m *SCPayload) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *SCPayload) GetPayloadUser() *User {
	if m != nil {
		return m.PayloadUser
	}
	return nil
}

func (m *SCPayload) GetPayloadLog() *Log {
	if m != nil {
		return m.PayloadLog
	}
	return nil
}

func init() {
	proto.RegisterType((*Log)(nil), "Log")
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*SCPayload)(nil), "SCPayload")
	proto.RegisterEnum("PayloadType", PayloadType_name, PayloadType_value)
}

func init() { proto.RegisterFile("service_client.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0xcf, 0x8a, 0x1a, 0x41,
	0x10, 0x87, 0xd3, 0xfe, 0x9f, 0x9a, 0xb8, 0x6b, 0x9a, 0x25, 0x0c, 0x4b, 0x08, 0x83, 0x59, 0x12,
	0xc9, 0xc1, 0x83, 0xb9, 0x84, 0x40, 0x0e, 0xae, 0x76, 0xc2, 0x82, 0x31, 0xd2, 0xea, 0x42, 0x72,
	0x91, 0xd6, 0xae, 0x68, 0x93, 0x71, 0x46, 0xc6, 0x56, 0xd6, 0xd7, 0xc9, 0x93, 0xe4, 0x9e, 0x97,
	0x0a, 0x5d, 0x33, 0xeb, 0xca, 0xee, 0xad, 0xea, 0x2b, 0xbb, 0xf8, 0x7d, 0x25, 0x03, 0x17, 0x5b,
	0x4c, 0xf7, 0x66, 0x81, 0xb3, 0x45, 0x64, 0x30, 0xb6, 0xed, 0x4d, 0x9a, 0xd8, 0xa4, 0xf9, 0x8f,
	0x41, 0x71, 0x90, 0x2c, 0xf9, 0x05, 0x94, 0xc5, 0x1e, 0x63, 0x1b, 0xb0, 0x90, 0xb5, 0x3c, 0x99,
	0x35, 0xfc, 0x25, 0x54, 0xc6, 0x56, 0xd9, 0xdd, 0x36, 0x28, 0x10, 0xce, 0x3b, 0xce, 0xa1, 0xd4,
	0x4b, 0x34, 0x06, 0xc5, 0x90, 0xb5, 0xea, 0x92, 0x6a, 0xfe, 0x0a, 0x3c, 0x71, 0xb7, 0x31, 0x29,
	0xea, 0xae, 0x0d, 0x4a, 0x21, 0x6b, 0x31, 0xf9, 0x00, 0x78, 0x00, 0x55, 0xb1, 0x9e, 0xa3, 0x46,
	0x1d, 0x94, 0x43, 0xd6, 0xaa, 0xc9, 0xfb, 0x96, 0xbf, 0x06, 0xe8, 0x2e, 0xac, 0x49, 0xe2, 0x89,
	0x59, 0x63, 0x50, 0xa1, 0x87, 0x27, 0xc4, 0x65, 0xf8, 0x86, 0x76, 0x95, 0xe8, 0xa0, 0x9a, 0x65,
	0xc8, 0x3a, 0xca, 0x80, 0xa9, 0x0d, 0x6a, 0x44, 0xa9, 0x6e, 0xfe, 0x2d, 0x40, 0x69, 0xba, 0xc5,
	0x94, 0x87, 0xe0, 0x8f, 0x56, 0x49, 0x8c, 0xc3, 0xdd, 0x7a, 0x8e, 0x69, 0x2e, 0x75, 0x8a, 0x78,
	0x03, 0x8a, 0x53, 0x13, 0x93, 0x57, 0x5d, 0xba, 0xd2, 0x2d, 0x1c, 0xaa, 0x75, 0x26, 0xe5, 0x49,
	0xaa, 0x5d, 0xb8, 0x9b, 0xed, 0x2d, 0xa6, 0xe6, 0x97, 0x41, 0x4d, 0x56, 0x35, 0x79, 0x42, 0xe8,
	0x6c, 0x6b, 0x65, 0x22, 0x92, 0x72, 0x67, 0x73, 0x8d, 0xdb, 0x3d, 0xc6, 0x3b, 0x72, 0xf1, 0xa4,
	0x2b, 0xdd, 0x71, 0xae, 0x4d, 0x6a, 0x57, 0x5a, 0x59, 0x24, 0x0f, 0x26, 0x1f, 0x00, 0x7f, 0x0b,
	0x67, 0x5d, 0xad, 0x8d, 0x53, 0x56, 0x51, 0x5f, 0x59, 0x95, 0x4b, 0x3d, 0xa2, 0xfc, 0x0d, 0x94,
	0x06, 0xc9, 0x72, 0x1b, 0x78, 0x61, 0xb1, 0xe5, 0x77, 0xce, 0xdb, 0x4e, 0xb5, 0xed, 0x88, 0x88,
	0x6d, 0x7a, 0x90, 0x34, 0xbc, 0xfc, 0x0c, 0xde, 0x11, 0xb9, 0x24, 0xbf, 0xf1, 0x90, 0xfb, 0xbb,
	0x92, 0x5f, 0x42, 0x79, 0xaf, 0xa2, 0x1d, 0x92, 0xb9, 0xdf, 0x29, 0xb9, 0xf7, 0x32, 0x43, 0x9f,
	0x0a, 0x1f, 0x59, 0xf3, 0x0f, 0x03, 0x6f, 0xdc, 0x1b, 0xa9, 0x43, 0x94, 0x28, 0xcd, 0xaf, 0xa0,
	0x92, 0xfd, 0x15, 0xb4, 0xe2, 0xac, 0xf3, 0xbc, 0x9d, 0x4f, 0x26, 0x87, 0x0d, 0xca, 0x7c, 0xf6,
	0xf8, 0xda, 0x85, 0xa7, 0xd7, 0x7e, 0x07, 0x7e, 0xfe, 0xd0, 0x65, 0xa6, 0x13, 0xfb, 0x9d, 0x32,
	0x09, 0xc8, 0xd3, 0x09, 0xbf, 0x02, 0xc8, 0xdb, 0x41, 0xb2, 0xa4, 0x83, 0xdf, 0x67, 0x3c, 0xe1,
	0xef, 0xc7, 0xc7, 0x75, 0x2e, 0x07, 0x3f, 0x07, 0x7f, 0x3a, 0x16, 0x72, 0xd6, 0x93, 0xa2, 0x3b,
	0x11, 0x8d, 0x67, 0x47, 0x30, 0x1d, 0xf5, 0x1d, 0x60, 0xfc, 0x05, 0xd4, 0x7b, 0xdf, 0xfb, 0x62,
	0xf6, 0x55, 0x0c, 0x85, 0x74, 0xa8, 0xe0, 0x7e, 0x43, 0xe8, 0x56, 0xc8, 0x9b, 0x2f, 0x3f, 0x1a,
	0xc5, 0x6b, 0xef, 0x67, 0x75, 0xa5, 0x62, 0x1d, 0x61, 0x3a, 0xaf, 0xd0, 0xc7, 0xf1, 0xe1, 0x7f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x49, 0x50, 0xd7, 0x83, 0x34, 0x03, 0x00, 0x00,
}
